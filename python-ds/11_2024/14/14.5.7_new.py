print('Задача 7. Яйца')

# В рамках программы колонизации Марса
# компания «Спейс Инжиниринг» вывела особую породу черепах,
# которые, по задумке, должны размножаться, откладывая яйца в марсианском грунте.
# Откладывать яйца слишком близко к поверхности опасно из-за радиации,
# а слишком глубоко — из-за давления грунта и недостатка кислорода.
# Вообще, факторов очень много,
# но специалисты проделали большую работу и предположили,
# что уровень опасности для черепашьих яиц рассчитывается по формуле
# D = x**3 − 3x**2 − 12x + 10,
# где x — глубина кладки в метрах,
# а D — уровень опасности в условных единицах.
#
# Для тестирования гипотезы
# нужно взять пробу грунта на безопасной, согласно формуле, глубине.
#
# Напишите программу,
# находящую такое значение глубины "х", при котором уровень опасности как можно более близок к нулю.
# На вход программе подаётся максимально допустимое отклонение уровня опасности от нуля,
# а программа должна рассчитать приблизительное значение "х",
# удовлетворяющее этому отклонению.
#
# Известно, что глубина точно больше нуля и меньше четырёх метров.
#
# Обеспечьте контроль ввода.
#
# Пример:
# Введите максимально допустимый уровень опасности: 0.01
#
# Приблизительная глубина безопасной кладки: 0.732421875 м

def make_list():
  my_list = []
  item = 0
  while item <= 4:
    my_list.append(round(item, 4))
    item += 0.001
  return my_list

# print('Глубины = ', make_list())

dangers = []
goal_danger = float(input('Введите максимально допустимый уровень опасности: '))

my_dict = {}
for x in make_list():
  dangers.append(x ** 3 - 3 * x ** 2 - 12 * x + 10)
  my_dict[x] = (x ** 3 - 3 * x ** 2 - 12 * x + 10)
  if abs(x ** 3 - 3 * x ** 2 - 12 * x + 10) < goal_danger:
    goal_danger = (x ** 3 - 3 * x ** 2 - 12 * x + 10)
    goal_deep = x


# print('dangers = ', dangers)

print('Приблизительная глубина безопасной кладки: {} м'.format(goal_deep))
# print('goal_danger = ', goal_danger)


# for i in my_dict:
#   print('Глубина {} = Опасность {}'.format(i, my_dict[i]))


# for i in frange(10, 100, 10):
#   print(i)

# min = 100
# for d_middle in frange(max_dan, 4, max_dan):
#   middle_danger = d_middle ** 3 - 3 * d_middle ** 2 - 12 * d_middle + 10
#   if min > abs(middle_danger):
#     min = middle_danger
#     dep = d_middle
#   # print(d_middle, middle_danger)
# print()
# # print('Минимальный уровень опасности', min, 'при глубине', dep, 'метр(ов)')
# print('Приблизительная глубина безопасной кладки:', dep, 'м')
